import { NextResponse } from "next/server";

// ‚öôÔ∏è –≠—Ç–æ—Ç API-—Ä–æ—É—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã LinguaTurca –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤ Airtable.
// –û–∂–∏–¥–∞–µ–º—ã–µ –ø–æ–ª—è: name, phone, email, format, section, button

export async function POST(req: Request) {
  try {
    const body = await req.json();

    console.log("üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", body);

    // —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –∫–ª—é—á–µ–π –∏ —Ä—É—Å—Å–∫–∏—Ö –ø–æ–ª–µ–π
    const –ò–º—è = body.name || body.–ò–º—è;
    const –¢–µ–ª–µ—Ñ–æ–Ω = body.phone || body.–¢–µ–ª–µ—Ñ–æ–Ω;
    const Email = body.email || body.Email;
    const –§–æ—Ä–º–∞—Ç = body.format || body["–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è"];
    const –°–µ–∫—Ü–∏—è = body.section || body["–°–µ–∫—Ü–∏—è —Å–∞–π—Ç–∞"];
    const –ö–Ω–æ–ø–∫–∞ = body.button || body["–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏"];

    if (!–ò–º—è || !–¢–µ–ª–µ—Ñ–æ–Ω || !Email) {
      console.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:", {
        name: !!–ò–º—è,
        phone: !!–¢–µ–ª–µ—Ñ–æ–Ω,
        email: !!Email,
      });
      return NextResponse.json(
        { success: false, error: "Missing required fields" },
        { status: 400 }
      );
    }

    if (!process.env.AIRTABLE_API_KEY || !process.env.AIRTABLE_BASE_ID || !process.env.AIRTABLE_TABLE_NAME) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Airtable')
      return NextResponse.json(
        { success: false, error: '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞' },
        { status: 500 }
      )
    }

    const airtablePayload = {
      fields: {
        –ò–º—è,
        –¢–µ–ª–µ—Ñ–æ–Ω,
        Email,
        "–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è": –§–æ—Ä–º–∞—Ç || '',
        "–°–µ–∫—Ü–∏—è —Å–∞–π—Ç–∞": –°–µ–∫—Ü–∏—è || '',
        "–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏": –ö–Ω–æ–ø–∫–∞ || '',
      },
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Airtable:', airtablePayload);

    const res = await fetch(
      `https://api.airtable.com/v0/${process.env.AIRTABLE_BASE_ID}/${process.env.AIRTABLE_TABLE_NAME}`,
      {
        method: "POST",
        headers: {
          Authorization: `Bearer ${process.env.AIRTABLE_API_KEY}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify(airtablePayload),
      }
    );

    const data = await res.json();
    console.log("‚úÖ –û—Ç–≤–µ—Ç Airtable:", data);

    if (!res.ok) throw new Error(JSON.stringify(data));

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Airtable:", error);
    return NextResponse.json(
      { success: false, error: "Server error" },
      { status: 500 }
    );
  }
}
