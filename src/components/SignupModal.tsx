"use client";

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

interface ModalContext {
  section: string;
  action: string;
}

interface SignupModalProps {
  isOpen: boolean;
  onClose: () => void;
  context: ModalContext;
}

export default function SignupModal({ isOpen, onClose, context }: SignupModalProps) {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    message: ""
  });

  const [isSubmitting, setIsSubmitting] = useState(false);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  let title = "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ";
  let subtitle = "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏";

  if (context.section === "nav" && context.action === "signup") {
    title = "–ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –≤ LinguaTurca";
    subtitle = "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è";
  } else if (context.section === "hero") {
    title = "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫—É—Ä—Å —Ç—É—Ä–µ—Ü–∫–æ–≥–æ";
    subtitle = "–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ ‚Äî –≤ –ø–æ–¥–∞—Ä–æ–∫ üéÅ";
  } else if (context.section === "pricing" && context.action === "group") {
    title = "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –≤ –º–∏–Ω–∏-–≥—Ä—É–ø–ø—É";
    subtitle = "–£—á–∏—Ç–µ—Å—å –≤ –∫–æ–º–∞–Ω–¥–µ –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Ü–µ–ª–∏ –≤–º–µ—Å—Ç–µ";
  } else if (context.section === "consultation") {
    title = "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è";
    subtitle = "–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∏ —É–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å";
  } else if (context.section === "upcoming_groups") {
    title = "–ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ –≤ –≥—Ä—É–ø–ø–µ";
    subtitle = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!";
  }

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    console.log({
      name: formData.name,
      phone: formData.phone,
      message: formData.message,
      section: context.section,
      action: context.action,
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    setTimeout(() => {
      setIsSubmitting(false);
      onClose();
      setFormData({ name: "", phone: "", message: "" });
    }, 1000);
  };

  if (!isOpen) return null;

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        transition={{ duration: 0.3 }}
        className="fixed inset-0 z-50 flex items-center justify-center bg-black/40"
        onClick={onClose}
      >
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          exit={{ opacity: 0, scale: 0.95 }}
          transition={{ duration: 0.3 }}
          className="bg-white rounded-2xl shadow-lg p-8 max-w-lg w-full mx-4 relative min-h-[60vh] flex flex-col"
          onClick={(e) => e.stopPropagation()}
        >
          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
          <button
            onClick={onClose}
            className="absolute top-4 right-4 text-gray-500 hover:text-gray-800 text-2xl transition-colors duration-200"
          >
            √ó
          </button>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h2 className="text-2xl font-bold text-gray-900 mb-2 text-center">
            {title}
          </h2>

          {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <p className="text-gray-600 mb-6 text-center">
            {subtitle}
          </p>

          {/* –§–æ—Ä–º–∞ */}
          <form onSubmit={handleSubmit} className="space-y-4 flex-1 flex flex-col">
            {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ */}
            <div>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                className="w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#009EFF] focus:border-transparent transition-all duration-200"
              />
            </div>

            {/* –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ */}
            <div>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                required
                className="w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#009EFF] focus:border-transparent transition-all duration-200"
              />
            </div>

            {/* –ü–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
            <div className="flex-1">
              <textarea
                name="message"
                value={formData.message}
                onChange={handleInputChange}
                placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–ø–æ –∂–µ–ª–∞–Ω–∏—é)"
                rows={3}
                className="w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#009EFF] focus:border-transparent transition-all duration-200 resize-none"
              />
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <motion.button
              type="submit"
              disabled={isSubmitting}
              className="bg-[#009EFF] hover:bg-[#007ACC] text-white font-semibold rounded-full py-3 px-6 w-full transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"}
            </motion.button>
          </form>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <p className="text-center mt-4 text-sm text-gray-500">
            –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
          </p>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
}
