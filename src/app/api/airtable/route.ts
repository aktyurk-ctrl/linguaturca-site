import { NextResponse } from "next/server";

export async function POST(request: Request) {
  try {
    console.log("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: API route –Ω–∞–π–¥–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"); // FIXED BY CURSOR
    
    const data = await request.json();

    console.log("üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", data);

    const { AIRTABLE_API_KEY, AIRTABLE_BASE_ID, AIRTABLE_TABLE_NAME } = process.env;
    if (!AIRTABLE_API_KEY || !AIRTABLE_BASE_ID || !AIRTABLE_TABLE_NAME) {
      throw new Error("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Airtable –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    }

    const res = await fetch(`https://api.airtable.com/v0/${AIRTABLE_BASE_ID}/${AIRTABLE_TABLE_NAME}`, {
      method: "POST",
      headers: {
        Authorization: `Bearer ${AIRTABLE_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        fields: {
          –ò–º—è: data.name,
          –¢–µ–ª–µ—Ñ–æ–Ω: data.phone,
          Email: data.email,
          –§–æ—Ä–º–∞—Ç: data.format,
          –°–µ–∫—Ü–∏—è: data.section,
          –ö–Ω–æ–ø–∫–∞: data.button,
        },
      }),
    });

    const result = await res.json();
    console.log("‚úÖ –û—Ç–≤–µ—Ç Airtable:", result);
    return NextResponse.json(result);
  } catch (error: any) {
    console.error("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Airtable:", error);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
}